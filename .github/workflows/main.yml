name: Sync Releases

on:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 00:00 运行
  workflow_dispatch:  # 手动触发支持

jobs:
  sync:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up GitHub CLI
        uses: cli/gh-action@v2

      - name: Get latest release info from upstream
        id: get_release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Fetching latest release from upstream repo..."
          LATEST_RELEASE=$(gh release list --repo rcmaehl/WhyNotWin11 --limit 1 --json tagName --jq '.[0].tagName')
          echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_ENV
          echo "Latest release: $LATEST_RELEASE"

      - name: Check if this release already exists in this repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Checking if release $LATEST_RELEASE already exists in this repo..."
          EXISTING_RELEASE=$(gh release list --repo klcb2010/WhyNotWin11 --json tagName --jq '.[].tagName' | grep -Fx "$LATEST_RELEASE" || true)
          if [ -n "$EXISTING_RELEASE" ]; then
            echo "Release $LATEST_RELEASE already exists. Skipping sync."
            exit 0
          fi

      - name: Download latest release assets from upstream
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Downloading assets for $LATEST_RELEASE from upstream..."
          mkdir -p assets
          gh release view "$LATEST_RELEASE" --repo rcmaehl/WhyNotWin11 --json assets --jq '.assets[].url' | while read -r url; do
            echo "Downloading $url"
            wget --header="Authorization: token $GH_TOKEN" -P assets "$url"
          done

      - name: Create new release in this repo
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating release $LATEST_RELEASE in current repo..."
          gh release create "$LATEST_RELEASE" assets/* \
            --repo klcb2010/WhyNotWin11 \
            --title "$LATEST_RELEASE" \
            --notes "Auto-synced from upstream."
